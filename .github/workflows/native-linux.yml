# This workflow will build the native component for different platforms using
# qemu-user & docker

name: Build Linux Binaries

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  native:

    # Switch back to ubuntu-latest after that maps to 20.04
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        image: [
          { base: "debian:10", arch: "386", qemu_arch: "i386-softmmu" },
          { base: "debian:10", arch: amd64, qemu_arch: "x86_64-softmmu" },
          { base: "debian:10", arch: arm, qemu_arch: "arm-softmmu" },
          { base: "debian:10", arch: arm64, qemu_arch: "aarch64-softmmu" },
          { base: "debian:10", arch: linux-arm-v5, qemu_arch: "arm-softmmu" },
          { base: "debian:10", arch: s390x, qemu-arch: "s390x-softmmu" },
          { base: "loongsongd/debian:v10.2-la64", arch: "linux/loong64", qemu_arch: "loongarch64-softmmu" }
        ]
      fail-fast: false

    name: Linux binary ${{ matrix.image.arch }}

    steps:
      - uses: actions/checkout@v2
      - name: cache dependencies
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
      - name: Update System
        run: sudo apt-get update -y
      - name: Install Ninja
        run: sudo apt-get install ninja-build
      - name: Install qemu
        run: "wget -q https://download.qemu.org/qemu-7.1.0.tar.xz && tar xJf qemu-7.1.0.tar.xz && cd qemu-7.1.0 && ./configure --target-list=${{ matrix.image.qemu_arch }} && make -j4 && sudo make install"
      - name: Experimental Docker
        run: sudo cp .github/experimental-docker.json /etc/docker/daemon.json
      - name: Restart Docker
        run: sudo systemctl restart docker.service
      - name: Pull docker image
        run: docker pull --platform $(echo ${{ matrix.image.arch }} | sed 's|-|/|g') ${{ matrix.image.base }} || true
      - name: Build inside Docker
        run: docker run --platform $(echo ${{ matrix.image.arch }} --rm -v $GITHUB_WORKSPACE:/work ${{ matrix.image.base }} /work/.github/build-native-debian.sh
      - name: Archive built library
        uses: actions/upload-artifact@v2
        with:
          name: shared-object-${{ matrix.image.arch }}
          path: build/jni/*.so
      - name: Archive built jar
        uses: actions/upload-artifact@v2
        with:
          name: jar-${{ matrix.image.arch }}
          path: archive/*.jar

